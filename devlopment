local GhostHub = {}
GhostHub.__index = GhostHub

-- Serviços
local TweenService = game:GetService("TweenService")
local UserInputService = game:GetService("UserInputService")
local RunService = game:GetService("RunService")
local Players = game:GetService("Players")
local CoreGui = game:GetService("CoreGui")

local Player = Players.LocalPlayer
local Mouse = Player:GetMouse()

-- Configurações de estilo
local Theme = {
    Background = Color3.fromRGB(25, 25, 25),
    Secondary = Color3.fromRGB(35, 35, 35),
    Accent = Color3.fromRGB(255, 64, 64),
    Text = Color3.fromRGB(255, 255, 255),
    TextDark = Color3.fromRGB(180, 180, 180),
    Border = Color3.fromRGB(45, 45, 45),
    Success = Color3.fromRGB(64, 255, 64),
    Warning = Color3.fromRGB(255, 255, 64)
}

-- Função para criar tweens
local function CreateTween(object, info, properties)
    local tween = TweenService:Create(object, info, properties)
    tween:Play()
    return tween
end

-- Função principal para criar a UI
function GhostHub:CreateWindow(config)
    config = config or {}
    local windowTitle = config.Title or "GhostHub"
    local windowSize = config.Size or UDim2.new(0, 580, 0, 460)
    
    local GUI = {}
    
    -- ScreenGui principal
    GUI.ScreenGui = Instance.new("ScreenGui")
    GUI.ScreenGui.Name = "GhostHubUI"
    GUI.ScreenGui.ResetOnSpawn = false
    GUI.ScreenGui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling
    
    -- Proteção contra detecção
    if syn and syn.protect_gui then
        syn.protect_gui(GUI.ScreenGui)
        GUI.ScreenGui.Parent = CoreGui
    elseif gethui then
        GUI.ScreenGui.Parent = gethui()
    else
        GUI.ScreenGui.Parent = CoreGui
    end
    
    -- Frame principal
    GUI.MainFrame = Instance.new("Frame")
    GUI.MainFrame.Name = "MainFrame"
    GUI.MainFrame.Parent = GUI.ScreenGui
    GUI.MainFrame.BackgroundColor3 = Theme.Background
    GUI.MainFrame.BorderSizePixel = 0
    GUI.MainFrame.Position = UDim2.new(0.5, -290, 0.5, -230)
    GUI.MainFrame.Size = windowSize
    GUI.MainFrame.Active = true
    GUI.MainFrame.Draggable = true
    
    -- Borda do frame principal
    local MainCorner = Instance.new("UICorner")
    MainCorner.CornerRadius = UDim.new(0, 8)
    MainCorner.Parent = GUI.MainFrame
    
    -- Barra do título
    GUI.TitleBar = Instance.new("Frame")
    GUI.TitleBar.Name = "TitleBar"
    GUI.TitleBar.Parent = GUI.MainFrame
    GUI.TitleBar.BackgroundColor3 = Theme.Secondary
    GUI.TitleBar.BorderSizePixel = 0
    GUI.TitleBar.Size = UDim2.new(1, 0, 0, 35)
    
    local TitleCorner = Instance.new("UICorner")
    TitleCorner.CornerRadius = UDim.new(0, 8)
    TitleCorner.Parent = GUI.TitleBar
    
    -- Título
    GUI.Title = Instance.new("TextLabel")
    GUI.Title.Name = "Title"
    GUI.Title.Parent = GUI.TitleBar
    GUI.Title.BackgroundTransparency = 1
    GUI.Title.Position = UDim2.new(0, 15, 0, 0)
    GUI.Title.Size = UDim2.new(1, -80, 1, 0)
    GUI.Title.Font = Enum.Font.GothamBold
    GUI.Title.Text = "Xx " .. windowTitle .. " xX"
    GUI.Title.TextColor3 = Theme.Text
    GUI.Title.TextSize = 16
    GUI.Title.TextXAlignment = Enum.TextXAlignment.Left
    
    -- Botão de fechar
    GUI.CloseBtn = Instance.new("TextButton")
    GUI.CloseBtn.Name = "CloseBtn"
    GUI.CloseBtn.Parent = GUI.TitleBar
    GUI.CloseBtn.BackgroundColor3 = Theme.Accent
    GUI.CloseBtn.BorderSizePixel = 0
    GUI.CloseBtn.Position = UDim2.new(1, -30, 0, 5)
    GUI.CloseBtn.Size = UDim2.new(0, 25, 0, 25)
    GUI.CloseBtn.Font = Enum.Font.GothamBold
    GUI.CloseBtn.Text = "X"
    GUI.CloseBtn.TextColor3 = Theme.Text
    GUI.CloseBtn.TextSize = 14
    
    local CloseCorner = Instance.new("UICorner")
    CloseCorner.CornerRadius = UDim.new(0, 4)
    CloseCorner.Parent = GUI.CloseBtn
    
    -- Sidebar
    GUI.Sidebar = Instance.new("Frame")
    GUI.Sidebar.Name = "Sidebar"
    GUI.Sidebar.Parent = GUI.MainFrame
    GUI.Sidebar.BackgroundColor3 = Theme.Secondary
    GUI.Sidebar.BorderSizePixel = 0
    GUI.Sidebar.Position = UDim2.new(0, 0, 0, 35)
    GUI.Sidebar.Size = UDim2.new(0, 120, 1, -35)
    
    -- Container de conteúdo
    GUI.ContentFrame = Instance.new("Frame")
    GUI.ContentFrame.Name = "ContentFrame"
    GUI.ContentFrame.Parent = GUI.MainFrame
    GUI.ContentFrame.BackgroundColor3 = Theme.Background
    GUI.ContentFrame.BorderSizePixel = 0
    GUI.ContentFrame.Position = UDim2.new(0, 120, 0, 35)
    GUI.ContentFrame.Size = UDim2.new(1, -120, 1, -35)
    
    -- ScrollingFrame para o conteúdo
    GUI.ContentScroll = Instance.new("ScrollingFrame")
    GUI.ContentScroll.Name = "ContentScroll"
    GUI.ContentScroll.Parent = GUI.ContentFrame
    GUI.ContentScroll.BackgroundTransparency = 1
    GUI.ContentScroll.BorderSizePixel = 0
    GUI.ContentScroll.Size = UDim2.new(1, 0, 1, 0)
    GUI.ContentScroll.ScrollBarThickness = 4
    GUI.ContentScroll.ScrollBarImageColor3 = Theme.Accent
    
    -- Layout para o conteúdo
    local ContentLayout = Instance.new("UIListLayout")
    ContentLayout.Parent = GUI.ContentScroll
    ContentLayout.SortOrder = Enum.SortOrder.LayoutOrder
    ContentLayout.Padding = UDim.new(0, 8)
    
    local ContentPadding = Instance.new("UIPadding")
    ContentPadding.Parent = GUI.ContentScroll
    ContentPadding.PaddingTop = UDim.new(0, 15)
    ContentPadding.PaddingLeft = UDim.new(0, 15)
    ContentPadding.PaddingRight = UDim.new(0, 15)
    ContentPadding.PaddingBottom = UDim.new(0, 15)
    
    -- Layout para sidebar
    local SidebarLayout = Instance.new("UIListLayout")
    SidebarLayout.Parent = GUI.Sidebar
    SidebarLayout.SortOrder = Enum.SortOrder.LayoutOrder
    SidebarLayout.Padding = UDim.new(0, 2)
    
    local SidebarPadding = Instance.new("UIPadding")
    SidebarPadding.Parent = GUI.Sidebar
    SidebarPadding.PaddingTop = UDim.new(0, 10)
    SidebarPadding.PaddingLeft = UDim.new(0, 5)
    SidebarPadding.PaddingRight = UDim.new(0, 5)
    
    -- Variáveis para tabs
    GUI.Tabs = {}
    GUI.CurrentTab = nil
    
    -- Função para criar tab
    function GUI:CreateTab(config)
        config = config or {}
        local tabName = config.Name or "Tab"
        local tabIcon = config.Icon or ""
        
        local Tab = {}
        
        -- Botão da tab
        Tab.Button = Instance.new("TextButton")
        Tab.Button.Name = tabName
        Tab.Button.Parent = GUI.Sidebar
        Tab.Button.BackgroundColor3 = Theme.Border
        Tab.Button.BorderSizePixel = 0
        Tab.Button.Size = UDim2.new(1, 0, 0, 35)
        Tab.Button.Font = Enum.Font.Gotham
        Tab.Button.Text = tabName
        Tab.Button.TextColor3 = Theme.TextDark
        Tab.Button.TextSize = 12
        
        local TabCorner = Instance.new("UICorner")
        TabCorner.CornerRadius = UDim.new(0, 6)
        TabCorner.Parent = Tab.Button
        
        -- Container da tab
        Tab.Container = Instance.new("Frame")
        Tab.Container.Name = tabName .. "Container"
        Tab.Container.Parent = GUI.ContentScroll
        Tab.Container.BackgroundTransparency = 1
        Tab.Container.Size = UDim2.new(1, 0, 0, 0)
        Tab.Container.AutomaticSize = Enum.AutomaticSize.Y
        Tab.Container.Visible = false
        
        local TabLayout = Instance.new("UIListLayout")
        TabLayout.Parent = Tab.Container
        TabLayout.SortOrder = Enum.SortOrder.LayoutOrder
        TabLayout.Padding = UDim.new(0, 8)
        
        -- Função para ativar tab
        local function ActivateTab()
            -- Desativar todas as tabs
            for _, tab in pairs(GUI.Tabs) do
                tab.Button.BackgroundColor3 = Theme.Border
                tab.Button.TextColor3 = Theme.TextDark
                tab.Container.Visible = false
            end
            
            -- Ativar tab atual
            Tab.Button.BackgroundColor3 = Theme.Accent
            Tab.Button.TextColor3 = Theme.Text
            Tab.Container.Visible = true
            GUI.CurrentTab = Tab
        end
        
        Tab.Button.MouseButton1Click:Connect(ActivateTab)
        
        -- Hover effect
        Tab.Button.MouseEnter:Connect(function()
            if GUI.CurrentTab ~= Tab then
                CreateTween(Tab.Button, TweenInfo.new(0.2), {BackgroundColor3 = Theme.Secondary})
            end
        end)
        
        Tab.Button.MouseLeave:Connect(function()
            if GUI.CurrentTab ~= Tab then
                CreateTween(Tab.Button, TweenInfo.new(0.2), {BackgroundColor3 = Theme.Border})
            end
        end)
        
        -- Elementos da tab
        Tab.Elements = {}
        
        -- Função para criar seção
        function Tab:CreateSection(config)
            config = config or {}
            local sectionName = config.Name or "Section"
            
            local Section = Instance.new("Frame")
            Section.Name = sectionName
            Section.Parent = Tab.Container
            Section.BackgroundColor3 = Theme.Secondary
            Section.BorderSizePixel = 0
            Section.Size = UDim2.new(1, 0, 0, 0)
            Section.AutomaticSize = Enum.AutomaticSize.Y
            
            local SectionCorner = Instance.new("UICorner")
            SectionCorner.CornerRadius = UDim.new(0, 6)
            SectionCorner.Parent = Section
            
            local SectionTitle = Instance.new("TextLabel")
            SectionTitle.Name = "Title"
            SectionTitle.Parent = Section
            SectionTitle.BackgroundTransparency = 1
            SectionTitle.Position = UDim2.new(0, 15, 0, 10)
            SectionTitle.Size = UDim2.new(1, -30, 0, 20)
            SectionTitle.Font = Enum.Font.GothamBold
            SectionTitle.Text = sectionName
            SectionTitle.TextColor3 = Theme.Text
            SectionTitle.TextSize = 14
            SectionTitle.TextXAlignment = Enum.TextXAlignment.Left
            
            local SectionContainer = Instance.new("Frame")
            SectionContainer.Name = "Container"
            SectionContainer.Parent = Section
            SectionContainer.BackgroundTransparency = 1
            SectionContainer.Position = UDim2.new(0, 0, 0, 35)
            SectionContainer.Size = UDim2.new(1, 0, 0, 0)
            SectionContainer.AutomaticSize = Enum.AutomaticSize.Y
            
            local SectionLayout = Instance.new("UIListLayout")
            SectionLayout.Parent = SectionContainer
            SectionLayout.SortOrder = Enum.SortOrder.LayoutOrder
            SectionLayout.Padding = UDim.new(0, 5)
            
            local SectionPadding = Instance.new("UIPadding")
            SectionPadding.Parent = SectionContainer
            SectionPadding.PaddingLeft = UDim.new(0, 15)
            SectionPadding.PaddingRight = UDim.new(0, 15)
            SectionPadding.PaddingBottom = UDim.new(0, 15)
            
            return SectionContainer
        end
        
        -- Função para criar botão
        function Tab:CreateButton(config)
            config = config or {}
            local buttonName = config.Name or "Button"
            local buttonCallback = config.Callback or function() end
            
            local Button = Instance.new("TextButton")
            Button.Name = buttonName
            Button.Parent = Tab.Container
            Button.BackgroundColor3 = Theme.Border
            Button.BorderSizePixel = 0
            Button.Size = UDim2.new(1, 0, 0, 35)
            Button.Font = Enum.Font.Gotham
            Button.Text = buttonName
            Button.TextColor3 = Theme.Text
            Button.TextSize = 12
            
            local ButtonCorner = Instance.new("UICorner")
            ButtonCorner.CornerRadius = UDim.new(0, 6)
            ButtonCorner.Parent = Button
            
            Button.MouseButton1Click:Connect(buttonCallback)
            
            -- Hover effect
            Button.MouseEnter:Connect(function()
                CreateTween(Button, TweenInfo.new(0.2), {BackgroundColor3 = Theme.Secondary})
            end)
            
            Button.MouseLeave:Connect(function()
                CreateTween(Button, TweenInfo.new(0.2), {BackgroundColor3 = Theme.Border})
            end)
            
            return Button
        end
        
        -- Função para criar toggle
        function Tab:CreateToggle(config)
            config = config or {}
            local toggleName = config.Name or "Toggle"
            local toggleDefault = config.Default or false
            local toggleCallback = config.Callback or function() end
            
            local Toggle = Instance.new("Frame")
            Toggle.Name = toggleName
            Toggle.Parent = Tab.Container
            Toggle.BackgroundColor3 = Theme.Border
            Toggle.BorderSizePixel = 0
            Toggle.Size = UDim2.new(1, 0, 0, 35)
            
            local ToggleCorner = Instance.new("UICorner")
            ToggleCorner.CornerRadius = UDim.new(0, 6)
            ToggleCorner.Parent = Toggle
            
            local ToggleLabel = Instance.new("TextLabel")
            ToggleLabel.Name = "Label"
            ToggleLabel.Parent = Toggle
            ToggleLabel.BackgroundTransparency = 1
            ToggleLabel.Position = UDim2.new(0, 15, 0, 0)
            ToggleLabel.Size = UDim2.new(1, -60, 1, 0)
            ToggleLabel.Font = Enum.Font.Gotham
            ToggleLabel.Text = toggleName
            ToggleLabel.TextColor3 = Theme.Text
            ToggleLabel.TextSize = 12
            ToggleLabel.TextXAlignment = Enum.TextXAlignment.Left
            
            local ToggleButton = Instance.new("TextButton")
            ToggleButton.Name = "Button"
            ToggleButton.Parent = Toggle
            ToggleButton.BackgroundColor3 = toggleDefault and Theme.Success or Theme.Accent
            ToggleButton.BorderSizePixel = 0
            ToggleButton.Position = UDim2.new(1, -40, 0.5, -10)
            ToggleButton.Size = UDim2.new(0, 35, 0, 20)
            ToggleButton.Text = toggleDefault and "ON" or "OFF"
            ToggleButton.Font = Enum.Font.GothamBold
            ToggleButton.TextColor3 = Theme.Text
            ToggleButton.TextSize = 10
            
            local ToggleButtonCorner = Instance.new("UICorner")
            ToggleButtonCorner.CornerRadius = UDim.new(0, 10)
            ToggleButtonCorner.Parent = ToggleButton
            
            local toggled = toggleDefault
            
            ToggleButton.MouseButton1Click:Connect(function()
                toggled = not toggled
                ToggleButton.Text = toggled and "ON" or "OFF"
                ToggleButton.BackgroundColor3 = toggled and Theme.Success or Theme.Accent
                toggleCallback(toggled)
            end)
            
            return Toggle
        end
        
        -- Adicionar tab à lista
        GUI.Tabs[tabName] = Tab
        
        -- Ativar primeira tab
        if #GUI.Tabs == 1 or GUI.CurrentTab == nil then
            ActivateTab()
        end
        
        return Tab
    end
    
    -- Eventos do botão fechar
    GUI.CloseBtn.MouseButton1Click:Connect(function()
        CreateTween(GUI.MainFrame, TweenInfo.new(0.3), {Size = UDim2.new(0, 0, 0, 0)})
        wait(0.3)
        GUI.ScreenGui:Destroy()
    end)
    
    -- Hover effect do botão fechar
    GUI.CloseBtn.MouseEnter:Connect(function()
        CreateTween(GUI.CloseBtn, TweenInfo.new(0.2), {BackgroundColor3 = Color3.fromRGB(255, 100, 100)})
    end)
    
    GUI.CloseBtn.MouseLeave:Connect(function()
        CreateTween(GUI.CloseBtn, TweenInfo.new(0.2), {BackgroundColor3 = Theme.Accent})
    end)
    
    -- Animação de entrada
    GUI.MainFrame.Size = UDim2.new(0, 0, 0, 0)
    CreateTween(GUI.MainFrame, TweenInfo.new(0.4, Enum.EasingStyle.Back), {Size = windowSize})
    
    return GUI
end

return GhostHub
