-- Tora UI Library - Simples e Prático para Roblox local ToraUI = {} -- Serviços local Players = game:GetService("Players") local UserInputService = game:GetService("UserInputService") local TweenService = game:GetService("TweenService") local Player = Players.LocalPlayer local PlayerGui = Player:WaitForChild("PlayerGui") -- Criar nova UI function ToraUI:New(nome) local ui = {} -- ScreenGui principal ui.ScreenGui = Instance.new("ScreenGui") ui.ScreenGui.Name = nome or "ToraUI" ui.ScreenGui.Parent = PlayerGui ui.ScreenGui.ResetOnSpawn = false return ui end -- Criar Janela function ToraUI:CriarJanela(parent, config) config = config or {} local janela = Instance.new("Frame") janela.Name = "Janela" janela.Size = config.Tamanho or UDim2.new(0, 400, 0, 300) janela.Position = config.Posicao or UDim2.new(0.5, -200, 0.5, -150) janela.BackgroundColor3 = Color3.fromRGB(30, 30, 30) janela.BorderSizePixel = 0 janela.Parent = parent -- Bordas arredondadas local corner = Instance.new("UICorner") corner.CornerRadius = UDim.new(0, 10) corner.Parent = janela -- Borda local stroke = Instance.new("UIStroke") stroke.Color = Color3.fromRGB(70, 70, 70) stroke.Thickness = 2 stroke.Parent = janela -- Barra superior local barra = Instance.new("Frame") barra.Name = "Barra" barra.Size = UDim2.new(1, 0, 0, 30) barra.BackgroundColor3 = Color3.fromRGB(40, 40, 40) barra.BorderSizePixel = 0 barra.Parent = janela local barraCorner = Instance.new("UICorner") barraCorner.CornerRadius = UDim.new(0, 10) barraCorner.Parent = barra -- Título local titulo = Instance.new("TextLabel") titulo.Name = "Titulo" titulo.Size = UDim2.new(1, -60, 1, 0) titulo.Position = UDim2.new(0, 10, 0, 0) titulo.BackgroundTransparency = 1 titulo.Text = config.Titulo or "Janela" titulo.TextColor3 = Color3.fromRGB(255, 255, 255) titulo.TextSize = 14 titulo.Font = Enum.Font.Gotham titulo.TextXAlignment = Enum.TextXAlignment.Left titulo.Parent = barra -- Botão fechar local fechar = Instance.new("TextButton") fechar.Name = "Fechar" fechar.Size = UDim2.new(0, 25, 0, 25) fechar.Position = UDim2.new(1, -30, 0, 2.5) fechar.BackgroundColor3 = Color3.fromRGB(255, 70, 70) fechar.BorderSizePixel = 0 fechar.Text = "X" fechar.TextColor3 = Color3.fromRGB(255, 255, 255) fechar.TextSize = 14 fechar.Font = Enum.Font.GothamBold fechar.Parent = barra local fecharCorner = Instance.new("UICorner") fecharCorner.CornerRadius = UDim.new(0, 5) fecharCorner.Parent = fechar -- Área de conteúdo local conteudo = Instance.new("Frame") conteudo.Name = "Conteudo" conteudo.Size = UDim2.new(1, -20, 1, -40) conteudo.Position = UDim2.new(0, 10, 0, 35) conteudo.BackgroundTransparency = 1 conteudo.Parent = janela -- Tornar arrastável local arrastar = false local inicioArrastar = nil local posicaoInicial = nil barra.InputBegan:Connect(function(input) if input.UserInputType == Enum.UserInputType.MouseButton1 then arrastar = true inicioArrastar = input.Position posicaoInicial = janela.Position end end) UserInputService.InputChanged:Connect(function(input) if input.UserInputType == Enum.UserInputType.MouseMovement and arrastar then local delta = input.Position - inicioArrastar janela.Position = UDim2.new( posicaoInicial.X.Scale, posicaoInicial.X.Offset + delta.X, posicaoInicial.Y.Scale, posicaoInicial.Y.Offset + delta.Y ) end end) UserInputService.InputEnded:Connect(function(input) if input.UserInputType == Enum.UserInputType.MouseButton1 then arrastar = false end end) -- Fechar janela fechar.MouseButton1Click:Connect(function() janela:Destroy() end) return {Janela = janela, Conteudo = conteudo} end -- Criar Botão function ToraUI:CriarBotao(parent, config) config = config or {} local botao = Instance.new("TextButton") botao.Name = "Botao" botao.Size = config.Tamanho or UDim2.new(0, 120, 0, 30) botao.Position = config.Posicao or UDim2.new(0, 0, 0, 0) botao.BackgroundColor3 = config.Cor or Color3.fromRGB(70, 130, 255) botao.BorderSizePixel = 0 botao.Text = config.Texto or "Botão" botao.TextColor3 = Color3.fromRGB(255, 255, 255) botao.TextSize = 14 botao.Font = Enum.Font.Gotham botao.Parent = parent local corner = Instance.new("UICorner") corner.CornerRadius = UDim.new(0, 6) corner.Parent = botao -- Efeitos botao.MouseEnter:Connect(function() TweenService:Create(botao, TweenInfo.new(0.2), {BackgroundColor3 = Color3.fromRGB(90, 150, 255)}):Play() end) botao.MouseLeave:Connect(function() TweenService:Create(botao, TweenInfo.new(0.2), {BackgroundColor3 = config.Cor or Color3.fromRGB(70, 130, 255)}):Play() end) if config.Clique then botao.MouseButton1Click:Connect(config.Clique) end return botao end -- Criar Toggle function ToraUI:CriarToggle(parent, config) config = config or {} local toggleFrame = Instance.new("Frame") toggleFrame.Name = "Toggle" toggleFrame.Size = config.Tamanho or UDim2.new(0, 150, 0, 25) toggleFrame.Position = config.Posicao or UDim2.new(0, 0, 0, 0) toggleFrame.BackgroundTransparency = 1 toggleFrame.Parent = parent -- Label local label = Instance.new("TextLabel") label.Size = UDim2.new(0, 80, 1, 0) label.BackgroundTransparency = 1 label.Text = config.Texto or "Toggle" label.TextColor3 = Color3.fromRGB(255, 255, 255) label.TextSize = 14 label.Font = Enum.Font.Gotham label.TextXAlignment = Enum.TextXAlignment.Left label.Parent = toggleFrame -- Switch local switch = Instance.new("Frame") switch.Name = "Switch" switch.Size = UDim2.new(0, 40, 0, 20) switch.Position = UDim2.new(1, -40, 0, 2.5) switch.BackgroundColor3 = Color3.fromRGB(100, 100, 100) switch.BorderSizePixel = 0 switch.Parent = toggleFrame local switchCorner = Instance.new("UICorner") switchCorner.CornerRadius = UDim.new(0, 10) switchCorner.Parent = switch -- Botão local botao = Instance.new("Frame") botao.Name = "Botao" botao.Size = UDim2.new(0, 16, 0, 16) botao.Position = UDim2.new(0, 2, 0, 2) botao.BackgroundColor3 = Color3.fromRGB(255, 255, 255) botao.BorderSizePixel = 0 botao.Parent = switch local botaoCorner = Instance.new("UICorner") botaoCorner.CornerRadius = UDim.new(0, 8) botaoCorner.Parent = botao -- Estado local ligado = config.Padrao or false local function atualizar() if ligado then TweenService:Create(switch, TweenInfo.new(0.2), {BackgroundColor3 = Color3.fromRGB(70, 130, 255)}):Play() TweenService:Create(botao, TweenInfo.new(0.2), {Position = UDim2.new(0, 22, 0, 2)}):Play() else TweenService:Create(switch, TweenInfo.new(0.2), {BackgroundColor3 = Color3.fromRGB(100, 100, 100)}):Play() TweenService:Create(botao, TweenInfo.new(0.2), {Position = UDim2.new(0, 2, 0, 2)}):Play() end if config.Mudanca then config.Mudanca(ligado) end end switch.InputBegan:Connect(function(input) if input.UserInputType == Enum.UserInputType.MouseButton1 then ligado = not ligado atualizar() end end) atualizar() return toggleFrame end -- Criar Slider function ToraUI:CriarSlider(parent, config) config = config or {} local sliderFrame = Instance.new("Frame") sliderFrame.Name = "Slider" sliderFrame.Size = config.Tamanho or UDim2.new(0, 200, 0, 40) sliderFrame.Position = config.Posicao or UDim2.new(0, 0, 0, 0) sliderFrame.BackgroundTransparency = 1 sliderFrame.Parent = parent -- Label local label = Instance.new("TextLabel") label.Size = UDim2.new(0, 100, 0, 20) label.BackgroundTransparency = 1 label.Text = config.Texto or "Slider" label.TextColor3 = Color3.fromRGB(255, 255, 255) label.TextSize = 14 label.Font = Enum.Font.Gotham label.TextXAlignment = Enum.TextXAlignment.Left label.Parent = sliderFrame -- Valor local valor = Instance.new("TextLabel") valor.Size = UDim2.new(0, 50, 0, 20) valor.Position = UDim2.new(1, -50, 0, 0) valor.BackgroundTransparency = 1 valor.Text = "50" valor.TextColor3 = Color3.fromRGB(255, 255, 255) valor.TextSize = 14 valor.Font = Enum.Font.Gotham valor.TextXAlignment = Enum.TextXAlignment.Right valor.Parent = sliderFrame -- Trilha local trilha = Instance.new("Frame") trilha.Name = "Trilha" trilha.Size = UDim2.new(1, 0, 0, 4) trilha.Position = UDim2.new(0, 0, 0, 25) trilha.BackgroundColor3 = Color3.fromRGB(100, 100, 100) trilha.BorderSizePixel = 0 trilha.Parent = sliderFrame local trilhaCorner = Instance.new("UICorner") trilhaCorner.CornerRadius = UDim.new(0, 2) trilhaCorner.Parent = trilha -- Progresso local progresso = Instance.new("Frame") progresso.Name = "Progresso" progresso.Size = UDim2.new(0.5, 0, 1, 0) progresso.BackgroundColor3 = Color3.fromRGB(70, 130, 255) progresso.BorderSizePixel = 0 progresso.Parent = trilha local progressoCorner = Instance.new("UICorner") progressoCorner.CornerRadius = UDim.new(0, 2) progressoCorner.Parent = progresso -- Botão local botao = Instance.new("Frame") botao.Name = "Botao" botao.Size = UDim2.new(0, 12, 0, 12) botao.Position = UDim2.new(0.5, -6, 0, -4) botao.BackgroundColor3 = Color3.fromRGB(255, 255, 255) botao.BorderSizePixel = 0 botao.Parent = trilha local botaoCorner = Instance.new("UICorner") botaoCorner.CornerRadius = UDim.new(0, 6) botaoCorner.Parent = botao -- Lógica local minimo = config.Minimo or 0 local maximo = config.Maximo or 100 local valorAtual = config.Padrao or 50 local function atualizar(novoValor) valorAtual = math.clamp(novoValor, minimo, maximo) local porcentagem = (valorAtual - minimo) / (maximo - minimo) progresso.Size = UDim2.new(porcentagem, 0, 1, 0) botao.Position = UDim2.new(porcentagem, -6, 0, -4) valor.Text = tostring(math.floor(valorAtual)) if config.Mudanca then config.Mudanca(valorAtual) end end -- Interação local arrastando = false trilha.InputBegan:Connect(function(input) if input.UserInputType == Enum.UserInputType.MouseButton1 then arrastando = true local posicao = (input.Position.X - trilha.AbsolutePosition.X) / trilha.AbsoluteSize.X atualizar(minimo + (maximo - minimo) * posicao) end end) UserInputService.InputChanged:Connect(function(input) if input.UserInputType == Enum.UserInputType.MouseMovement and arrastando then local posicao = (input.Position.X - trilha.AbsolutePosition.X) / trilha.AbsoluteSize.X atualizar(minimo + (maximo - minimo) * posicao) end end) UserInputService.InputEnded:Connect(function(input) if input.UserInputType == Enum.UserInputType.MouseButton1 then arrastando = false end end) atualizar(valorAtual) return sliderFrame end -- Criar Label function ToraUI:CriarLabel(parent, config) config = config or {} local label = Instance.new("TextLabel") label.Name = "Label" label.Size = config.Tamanho or UDim2.new(0, 200, 0, 20) label.Position = config.Posicao or UDim2.new(0, 0, 0, 0) label.BackgroundTransparency = 1 label.Text = config.Texto or "Label" label.TextColor3 = config.Cor or Color3.fromRGB(255, 255, 255) label.TextSize = config.TamanhoTexto or 14 label.Font = Enum.Font.Gotham label.TextXAlignment = config.Alinhamento or Enum.TextXAlignment.Left label.Parent = parent return label end -- Criar Input function ToraUI:CriarInput(parent, config) config = config or {} local input = Instance.new("TextBox") input.Name = "Input" input.Size = config.Tamanho or UDim2.new(0, 200, 0, 30) input.Position = config.Posicao or UDim2.new(0, 0, 0, 0) input.BackgroundColor3 = Color3.fromRGB(50, 50, 50) input.BorderSizePixel = 0 input.Text = config.Texto or "" input.PlaceholderText = config.Placeholder or "Digite aqui..." input.TextColor3 = Color3.fromRGB(255, 255, 255) input.PlaceholderColor3 = Color3.fromRGB(150, 150, 150) input.TextSize = 14 input.Font = Enum.Font.Gotham input.Parent = parent local corner = Instance.new("UICorner") corner.CornerRadius = UDim.new(0, 6) corner.Parent = input local stroke = Instance.new("UIStroke") stroke.Color = Color3.fromRGB(100, 100, 100) stroke.Thickness = 1 stroke.Parent = input -- Efeitos de foco input.Focused:Connect(function() TweenService:Create(stroke, TweenInfo.new(0.2), {Color = Color3.fromRGB(70, 130, 255)}):Play() end) input.FocusLost:Connect(function() TweenService:Create(stroke, TweenInfo.new(0.2), {Color = Color3.fromRGB(100, 100, 100)}):Play() if config.Mudanca then config.Mudanca(input.Text) end end) return input end -- Exemplo de uso local function ExemploUso() local ui = ToraUI:New("Exemplo Tora UI") local janela = ToraUI:CriarJanela(ui.ScreenGui, { Titulo = "Minha Interface", Tamanho = UDim2.new(0, 400, 0, 350), Posicao = UDim2.new(0.5, -200, 0.5, -175) }) ToraUI:CriarBotao(janela.Conteudo, { Texto = "Clique Aqui", Posicao = UDim2.new(0, 20, 0, 20), Cor = Color3.fromRGB(70, 130, 255), Clique = function() print("Botão clicado!") end }) ToraUI:CriarToggle(janela.Conteudo, { Texto = "Ativar", Posicao = UDim2.new(0, 20, 0, 60), Padrao = false, Mudanca = function(valor) print("Toggle:", valor) end }) ToraUI:CriarSlider(janela.Conteudo, { Texto = "Volume", Posicao = UDim2.new(0, 20, 0, 100), Minimo = 0, Maximo = 100, Padrao = 50, Mudanca = function(valor) print("Slider:", valor) end }) ToraUI:CriarLabel(janela.Conteudo, { Texto = "Esta é uma label", Posicao = UDim2.new(0, 20, 0, 160), Cor = Color3.fromRGB(200, 200, 200) }) ToraUI:CriarInput(janela.Conteudo, { Posicao = UDim2.new(0, 20, 0, 190), Placeholder = "Digite seu nome...", Mudanca = function(texto) print("Input:", texto) end }) end -- Executar exemplo (descomente para testar) -- ExemploUso() return ToraUI
