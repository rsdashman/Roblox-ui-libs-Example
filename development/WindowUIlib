-- UILib.lua
-- UI Library estilo cheat menu para Roblox (tema escuro)
-- Basta colar este arquivo como ModuleScript e usar conforme o exemplo

local UILib = {}
UILib.__index = UILib

local TweenService = game:GetService("TweenService")
local Players = game:GetService("Players")
local LocalPlayer = Players.LocalPlayer
local PlayerGui = LocalPlayer:WaitForChild("PlayerGui")

-- Cores do tema
local colors = {
    background = Color3.fromRGB(36, 37, 42),
    accent = Color3.fromRGB(60, 120, 200),
    button = Color3.fromRGB(50, 52, 60),
    button_hover = Color3.fromRGB(70, 72, 80),
    text = Color3.fromRGB(220, 220, 220),
    label = Color3.fromRGB(180, 180, 180),
    input = Color3.fromRGB(44, 44, 50),
    slider = Color3.fromRGB(60, 60, 70),
    toggle_on = Color3.fromRGB(60, 120, 200),
    toggle_off = Color3.fromRGB(80, 80, 90),
    titlebar = Color3.fromRGB(44, 46, 54), -- nova cor para barra de título
    border = Color3.fromRGB(20, 20, 24), -- cor da borda
}

local function createBaseWindow(title)
    local screenGui = Instance.new("ScreenGui")
    screenGui.Name = "UILib_CheatMenu"
    screenGui.ResetOnSpawn = false
    screenGui.Parent = PlayerGui

    local main = Instance.new("Frame")
    main.Name = "Main"
    main.Size = UDim2.new(0, 360, 0, 440)
    main.Position = UDim2.new(0.5, -180, 0.5, -220)
    main.BackgroundColor3 = colors.background
    main.BorderSizePixel = 2
    main.BorderColor3 = colors.border
    main.AnchorPoint = Vector2.new(0.5, 0.5)
    main.Parent = screenGui

    local uicorner = Instance.new("UICorner", main)
    uicorner.CornerRadius = UDim.new(0, 8)

    -- Sombra
    local shadow = Instance.new("ImageLabel")
    shadow.Name = "Shadow"
    shadow.BackgroundTransparency = 1
    shadow.Image = "rbxassetid://1316045217"
    shadow.ImageTransparency = 0.4
    shadow.Size = UDim2.new(1, 32, 1, 32)
    shadow.Position = UDim2.new(0, -16, 0, -16)
    shadow.ZIndex = 0
    shadow.Parent = main
    main.ZIndex = 1

    -- Barra de título destacada
    local titleBar = Instance.new("Frame")
    titleBar.Name = "TitleBar"
    titleBar.Size = UDim2.new(1, 0, 0, 44)
    titleBar.BackgroundColor3 = colors.titlebar
    titleBar.BorderSizePixel = 0
    titleBar.Parent = main
    titleBar.ZIndex = 2

    local titleLabel = Instance.new("TextLabel")
    titleLabel.Name = "Title"
    titleLabel.Size = UDim2.new(1, -60, 1, 0)
    titleLabel.Position = UDim2.new(0, 12, 0, 0)
    titleLabel.BackgroundTransparency = 1
    titleLabel.Text = title or "Menu"
    titleLabel.TextColor3 = colors.accent
    titleLabel.Font = Enum.Font.GothamBold
    titleLabel.TextSize = 22
    titleLabel.TextXAlignment = Enum.TextXAlignment.Left
    titleLabel.Parent = titleBar
    titleLabel.ZIndex = 3

    -- Botão de minimizar
    local minimizeBtn = Instance.new("TextButton")
    minimizeBtn.Name = "MinimizeBtn"
    minimizeBtn.Size = UDim2.new(0, 32, 0, 32)
    minimizeBtn.Position = UDim2.new(1, -40, 0.5, -16)
    minimizeBtn.BackgroundColor3 = Color3.fromRGB(60, 60, 70)
    minimizeBtn.Text = "_"
    minimizeBtn.TextColor3 = colors.text
    minimizeBtn.Font = Enum.Font.GothamBold
    minimizeBtn.TextSize = 24
    minimizeBtn.AutoButtonColor = true
    minimizeBtn.Parent = titleBar
    minimizeBtn.ZIndex = 4
    local minCorner = Instance.new("UICorner", minimizeBtn)
    minCorner.CornerRadius = UDim.new(1, 0)

    -- Drag functionality
    local UserInputService = game:GetService("UserInputService")
    local dragging = false
    local dragStart, startPos

    titleBar.InputBegan:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 and not minimizeBtn:IsMouseOver() then
            dragging = true
            dragStart = input.Position
            startPos = main.Position
        end
    end)
    titleBar.InputEnded:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 then
            dragging = false
        end
    end)
    UserInputService.InputChanged:Connect(function(input)
        if dragging and input.UserInputType == Enum.UserInputType.MouseMovement then
            local delta = input.Position - dragStart
            main.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
        end
    end)

    local content = Instance.new("Frame")
    content.Name = "Content"
    content.Position = UDim2.new(0, 12, 0, 44)
    content.Size = UDim2.new(1, -24, 1, -56)
    content.BackgroundTransparency = 1
    content.Parent = main
    content.ZIndex = 2

    local layout = Instance.new("UIListLayout", content)
    layout.Padding = UDim.new(0, 10)
    layout.SortOrder = Enum.SortOrder.LayoutOrder

    -- Minimizar funcionalidade
    local minimized = false
    minimizeBtn.MouseButton1Click:Connect(function()
        minimized = not minimized
        content.Visible = not minimized
        if minimized then
            main.Size = UDim2.new(0, 360, 0, 56)
        else
            main.Size = UDim2.new(0, 360, 0, 440)
        end
    end)

    return screenGui, main, content
end

function UILib:CreateWindow(title)
    local self = setmetatable({}, UILib)
    self._gui, self._main, self._content = createBaseWindow(title)
    return self
end

function UILib:AddLabel(text)
    local label = Instance.new("TextLabel")
    label.Size = UDim2.new(1, 0, 0, 24)
    label.BackgroundTransparency = 1
    label.Text = text
    label.TextColor3 = colors.label
    label.Font = Enum.Font.Gotham
    label.TextSize = 16
    label.TextXAlignment = Enum.TextXAlignment.Left
    label.Parent = self._content
    return label
end

function UILib:AddButton(text, callback)
    local btn = Instance.new("TextButton")
    btn.Size = UDim2.new(1, 0, 0, 32)
    btn.BackgroundColor3 = colors.button
    btn.Text = text
    btn.TextColor3 = colors.text
    btn.Font = Enum.Font.GothamBold
    btn.TextSize = 18
    btn.AutoButtonColor = false
    btn.Parent = self._content
    local uicorner = Instance.new("UICorner", btn)
    uicorner.CornerRadius = UDim.new(0, 6)
    btn.MouseEnter:Connect(function()
        btn.BackgroundColor3 = colors.button_hover
    end)
    btn.MouseLeave:Connect(function()
        btn.BackgroundColor3 = colors.button
    end)
    btn.MouseButton1Click:Connect(function()
        if callback then callback() end
    end)
    return btn
end

function UILib:AddToggle(text, default, callback)
    local frame = Instance.new("Frame")
    frame.Size = UDim2.new(1, 0, 0, 32)
    frame.BackgroundTransparency = 1
    frame.Parent = self._content

    local label = Instance.new("TextLabel")
    label.Size = UDim2.new(1, -40, 1, 0)
    label.Position = UDim2.new(0, 0, 0, 0)
    label.BackgroundTransparency = 1
    label.Text = text
    label.TextColor3 = colors.text
    label.Font = Enum.Font.Gotham
    label.TextSize = 16
    label.TextXAlignment = Enum.TextXAlignment.Left
    label.Parent = frame

    local toggle = Instance.new("TextButton")
    toggle.Size = UDim2.new(0, 32, 0, 24)
    toggle.Position = UDim2.new(1, -32, 0.5, -12)
    toggle.BackgroundColor3 = default and colors.toggle_on or colors.toggle_off
    toggle.Text = ""
    toggle.Parent = frame
    local uicorner = Instance.new("UICorner", toggle)
    uicorner.CornerRadius = UDim.new(1, 0)

    local state = default or false
    toggle.MouseButton1Click:Connect(function()
        state = not state
        toggle.BackgroundColor3 = state and colors.toggle_on or colors.toggle_off
        if callback then callback(state) end
    end)
    return toggle
end

function UILib:AddSlider(text, min, max, default, callback)
    local frame = Instance.new("Frame")
    frame.Size = UDim2.new(1, 0, 0, 44)
    frame.BackgroundTransparency = 1
    frame.Parent = self._content

    local label = Instance.new("TextLabel")
    label.Size = UDim2.new(1, 0, 0, 18)
    label.Position = UDim2.new(0, 0, 0, 0)
    label.BackgroundTransparency = 1
    label.Text = text .. " [" .. tostring(default) .. "]"
    label.TextColor3 = colors.text
    label.Font = Enum.Font.Gotham
    label.TextSize = 15
    label.TextXAlignment = Enum.TextXAlignment.Left
    label.Parent = frame

    local sliderBar = Instance.new("Frame")
    sliderBar.Size = UDim2.new(1, -40, 0, 8)
    sliderBar.Position = UDim2.new(0, 0, 0, 26)
    sliderBar.BackgroundColor3 = colors.slider
    sliderBar.Parent = frame
    local uicorner = Instance.new("UICorner", sliderBar)
    uicorner.CornerRadius = UDim.new(1, 0)

    local knob = Instance.new("Frame")
    knob.Size = UDim2.new(0, 16, 0, 16)
    knob.Position = UDim2.new((default-min)/(max-min), -8, 0.5, -8)
    knob.BackgroundColor3 = colors.accent
    knob.Parent = sliderBar
    local uicorner2 = Instance.new("UICorner", knob)
    uicorner2.CornerRadius = UDim.new(1, 0)

    local dragging = false
    local value = default or min

    local function setValueFromX(x)
        local rel = math.clamp((x - sliderBar.AbsolutePosition.X) / sliderBar.AbsoluteSize.X, 0, 1)
        value = math.floor((min + (max-min)*rel) + 0.5)
        knob.Position = UDim2.new(rel, -8, 0.5, -8)
        label.Text = text .. " [" .. tostring(value) .. "]"
        if callback then callback(value) end
    end

    knob.InputBegan:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 then
            dragging = true
        end
    end)
    knob.InputEnded:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 then
            dragging = false
        end
    end)
    sliderBar.InputBegan:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 then
            dragging = true
            setValueFromX(input.Position.X)
        end
    end)
    game:GetService("UserInputService").InputChanged:Connect(function(input)
        if dragging and input.UserInputType == Enum.UserInputType.MouseMovement then
            setValueFromX(input.Position.X)
        end
    end)
    return knob
end

function UILib:AddInput(placeholder, callback)
    local box = Instance.new("TextBox")
    box.Size = UDim2.new(1, 0, 0, 28)
    box.BackgroundColor3 = colors.input
    box.Text = ""
    box.PlaceholderText = placeholder or "Digite aqui..."
    box.TextColor3 = colors.text
    box.Font = Enum.Font.Gotham
    box.TextSize = 16
    box.ClearTextOnFocus = false
    box.Parent = self._content
    local uicorner = Instance.new("UICorner", box)
    uicorner.CornerRadius = UDim.new(0, 6)
    box.FocusLost:Connect(function(enter)
        if enter and callback then
            callback(box.Text)
        end
    end)
    return box
end

return UILib 
