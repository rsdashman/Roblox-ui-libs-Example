-- Roblox UI Library - Elegante Design Preto e Branco
-- Criado com componentes modernos e animações suaves

local TweenService = game:GetService("TweenService")
local UserInputService = game:GetService("UserInputService")
local Players = game:GetService("Players")

local Library = {}
Library.__index = Library

-- Configurações de tema
local Theme = {
    Background = Color3.fromRGB(15, 15, 15),
    Secondary = Color3.fromRGB(25, 25, 25),
    Accent = Color3.fromRGB(45, 45, 45),
    White = Color3.fromRGB(255, 255, 255),
    Gray = Color3.fromRGB(150, 150, 150),
    DarkGray = Color3.fromRGB(80, 80, 80),
    Success = Color3.fromRGB(255, 255, 255),
    Border = Color3.fromRGB(60, 60, 60)
}

-- Informações de animação
local AnimInfo = TweenInfo.new(0.3, Enum.EasingStyle.Quint, Enum.EasingDirection.Out)
local QuickAnimInfo = TweenInfo.new(0.15, Enum.EasingStyle.Quad, Enum.EasingDirection.Out)

-- Função para criar cantos arredondados
local function CreateCorner(parent, radius)
    local corner = Instance.new("UICorner")
    corner.CornerRadius = UDim.new(0, radius or 8)
    corner.Parent = parent
    return corner
end

-- Função para criar bordas
local function CreateStroke(parent, thickness, color)
    local stroke = Instance.new("UIStroke")
    stroke.Thickness = thickness or 1
    stroke.Color = color or Theme.Border
    stroke.Parent = parent
    return stroke
end

-- Função para criar gradiente
local function CreateGradient(parent, colors, rotation)
    local gradient = Instance.new("UIGradient")
    gradient.Color = ColorSequence.new(colors)
    gradient.Rotation = rotation or 0
    gradient.Parent = parent
    return gradient
end

-- Função para animar hover
local function CreateHoverEffect(element, hoverColor, normalColor)
    local connection1, connection2
    
    connection1 = element.MouseEnter:Connect(function()
        TweenService:Create(element, QuickAnimInfo, {BackgroundColor3 = hoverColor}):Play()
    end)
    
    connection2 = element.MouseLeave:Connect(function()
        TweenService:Create(element, QuickAnimInfo, {BackgroundColor3 = normalColor}):Play()
    end)
    
    return {connection1, connection2}
end

-- Criar ScreenGui principal
function Library:CreateWindow(title)
    local player = Players.LocalPlayer
    local playerGui = player:WaitForChild("PlayerGui")
    
    -- Remover GUI existente se houver
    local existingGui = playerGui:FindFirstChild("ElegantUILib")
    if existingGui then
        existingGui:Destroy()
    end
    
    local screenGui = Instance.new("ScreenGui")
    screenGui.Name = "ElegantUILib"
    screenGui.ResetOnSpawn = false
    screenGui.Parent = playerGui
    
    -- Frame principal
    local mainFrame = Instance.new("Frame")
    mainFrame.Name = "MainFrame"
    mainFrame.Size = UDim2.new(0, 550, 0, 400)
    mainFrame.Position = UDim2.new(0.5, -275, 0.5, -200)
    mainFrame.BackgroundColor3 = Theme.Background
    mainFrame.BorderSizePixel = 0
    mainFrame.Parent = screenGui
    
    CreateCorner(mainFrame, 12)
    CreateStroke(mainFrame, 1, Theme.Border)
    
    -- Sombra do frame principal
    local shadow = Instance.new("Frame")
    shadow.Name = "Shadow"
    shadow.Size = UDim2.new(1, 20, 1, 20)
    shadow.Position = UDim2.new(0, -10, 0, -10)
    shadow.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
    shadow.BackgroundTransparency = 0.8
    shadow.BorderSizePixel = 0
    shadow.ZIndex = mainFrame.ZIndex - 1
    shadow.Parent = mainFrame
    
    CreateCorner(shadow, 12)
    
    -- Header
    local header = Instance.new("Frame")
    header.Name = "Header"
    header.Size = UDim2.new(1, 0, 0, 50)
    header.Position = UDim2.new(0, 0, 0, 0)
    header.BackgroundColor3 = Theme.Secondary
    header.BorderSizePixel = 0
    header.Parent = mainFrame
    
    CreateCorner(header, 12)
    
    -- Header bottom border
    local headerBorder = Instance.new("Frame")
    headerBorder.Size = UDim2.new(1, -20, 0, 1)
    headerBorder.Position = UDim2.new(0, 10, 1, -1)
    headerBorder.BackgroundColor3 = Theme.Border
    headerBorder.BorderSizePixel = 0
    headerBorder.Parent = header
    
    -- Título
    local titleLabel = Instance.new("TextLabel")
    titleLabel.Name = "Title"
    titleLabel.Size = UDim2.new(1, -20, 1, 0)
    titleLabel.Position = UDim2.new(0, 20, 0, 0)
    titleLabel.BackgroundTransparency = 1
    titleLabel.Text = title or "Elegant UI Library"
    titleLabel.TextColor3 = Theme.White
    titleLabel.TextSize = 18
    titleLabel.Font = Enum.Font.GothamBold
    titleLabel.TextXAlignment = Enum.TextXAlignment.Left
    titleLabel.Parent = header
    
    -- Botão fechar
    local closeButton = Instance.new("TextButton")
    closeButton.Name = "CloseButton"
    closeButton.Size = UDim2.new(0, 30, 0, 30)
    closeButton.Position = UDim2.new(1, -40, 0, 10)
    closeButton.BackgroundColor3 = Theme.Accent
    closeButton.Text = "×"
    closeButton.TextColor3 = Theme.White
    closeButton.TextSize = 18
    closeButton.Font = Enum.Font.GothamBold
    closeButton.BorderSizePixel = 0
    closeButton.Parent = header
    
    CreateCorner(closeButton, 6)
    CreateHoverEffect(closeButton, Color3.fromRGB(255, 80, 80), Theme.Accent)
    
    closeButton.MouseButton1Click:Connect(function()
        TweenService:Create(mainFrame, AnimInfo, {
            Size = UDim2.new(0, 0, 0, 0),
            Position = UDim2.new(0.5, 0, 0.5, 0)
        }):Play()
        
        wait(0.3)
        screenGui:Destroy()
    end)
    
    -- Container de conteúdo
    local content = Instance.new("ScrollingFrame")
    content.Name = "Content"
    content.Size = UDim2.new(1, -20, 1, -70)
    content.Position = UDim2.new(0, 10, 0, 60)
    content.BackgroundTransparency = 1
    content.BorderSizePixel = 0
    content.ScrollBarThickness = 4
    content.ScrollBarImageColor3 = Theme.Gray
    content.CanvasSize = UDim2.new(0, 0, 0, 0)
    content.Parent = mainFrame
    
    -- Layout do conteúdo
    local contentLayout = Instance.new("UIListLayout")
    contentLayout.SortOrder = Enum.SortOrder.LayoutOrder
    contentLayout.Padding = UDim.new(0, 10)
    contentLayout.Parent = content
    
    -- Atualizar canvas size automaticamente
    contentLayout:GetPropertyChangedSignal("AbsoluteContentSize"):Connect(function()
        content.CanvasSize = UDim2.new(0, 0, 0, contentLayout.AbsoluteContentSize.Y + 20)
    end)
    
    -- Tornar arrastável
    local dragging = false
    local dragStart = nil
    local startPos = nil
    
    header.InputBegan:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 then
            dragging = true
            dragStart = input.Position
            startPos = mainFrame.Position
        end
    end)
    
    UserInputService.InputChanged:Connect(function(input)
        if dragging and input.UserInputType == Enum.UserInputType.MouseMovement then
            local delta = input.Position - dragStart
            mainFrame.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
        end
    end)
    
    UserInputService.InputEnded:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 then
            dragging = false
        end
    end)
    
    -- Animação de entrada
    mainFrame.Size = UDim2.new(0, 0, 0, 0)
    mainFrame.Position = UDim2.new(0.5, 0, 0.5, 0)
    
    TweenService:Create(mainFrame, AnimInfo, {
        Size = UDim2.new(0, 550, 0, 400),
        Position = UDim2.new(0.5, -275, 0.5, -200)
    }):Play()
    
    local window = {
        ScreenGui = screenGui,
        MainFrame = mainFrame,
        Content = content,
        ContentLayout = contentLayout
    }
    
    -- Métodos do window
    function window:CreateButton(text, callback)
        local button = Instance.new("TextButton")
        button.Name = "Button"
        button.Size = UDim2.new(1, 0, 0, 40)
        button.BackgroundColor3 = Theme.Secondary
        button.Text = text or "Button"
        button.TextColor3 = Theme.White
        button.TextSize = 14
        button.Font = Enum.Font.Gotham
        button.BorderSizePixel = 0
        button.Parent = content
        
        CreateCorner(button, 8)
        CreateStroke(button, 1, Theme.Border)
        CreateHoverEffect(button, Theme.Accent, Theme.Secondary)
        
        if callback then
            button.MouseButton1Click:Connect(callback)
        end
        
        return button
    end
    
    function window:CreateToggle(text, default, callback)
        local toggleFrame = Instance.new("Frame")
        toggleFrame.Name = "ToggleFrame"
        toggleFrame.Size = UDim2.new(1, 0, 0, 40)
        toggleFrame.BackgroundColor3 = Theme.Secondary
        toggleFrame.BorderSizePixel = 0
        toggleFrame.Parent = content
        
        CreateCorner(toggleFrame, 8)
        CreateStroke(toggleFrame, 1, Theme.Border)
        
        local toggleLabel = Instance.new("TextLabel")
        toggleLabel.Size = UDim2.new(1, -60, 1, 0)
        toggleLabel.Position = UDim2.new(0, 15, 0, 0)
        toggleLabel.BackgroundTransparency = 1
        toggleLabel.Text = text or "Toggle"
        toggleLabel.TextColor3 = Theme.White
        toggleLabel.TextSize = 14
        toggleLabel.Font = Enum.Font.Gotham
        toggleLabel.TextXAlignment = Enum.TextXAlignment.Left
        toggleLabel.Parent = toggleFrame
        
        local toggleButton = Instance.new("TextButton")
        toggleButton.Size = UDim2.new(0, 35, 0, 20)
        toggleButton.Position = UDim2.new(1, -45, 0.5, -10)
        toggleButton.BackgroundColor3 = default and Theme.White or Theme.DarkGray
        toggleButton.Text = ""
        toggleButton.BorderSizePixel = 0
        toggleButton.Parent = toggleFrame
        
        CreateCorner(toggleButton, 10)
        
        local toggleCircle = Instance.new("Frame")
        toggleCircle.Size = UDim2.new(0, 16, 0, 16)
        toggleCircle.Position = default and UDim2.new(1, -18, 0.5, -8) or UDim2.new(0, 2, 0.5, -8)
        toggleCircle.BackgroundColor3 = default and Theme.Background or Theme.White
        toggleCircle.BorderSizePixel = 0
        toggleCircle.Parent = toggleButton
        
        CreateCorner(toggleCircle, 8)
        
        local toggled = default or false
        
        toggleButton.MouseButton1Click:Connect(function()
            toggled = not toggled
            
            local buttonColor = toggled and Theme.White or Theme.DarkGray
            local circleColor = toggled and Theme.Background or Theme.White
            local circlePosition = toggled and UDim2.new(1, -18, 0.5, -8) or UDim2.new(0, 2, 0.5, -8)
            
            TweenService:Create(toggleButton, QuickAnimInfo, {BackgroundColor3 = buttonColor}):Play()
            TweenService:Create(toggleCircle, QuickAnimInfo, {BackgroundColor3 = circleColor}):Play()
            TweenService:Create(toggleCircle, QuickAnimInfo, {Position = circlePosition}):Play()
            
            if callback then
                callback(toggled)
            end
        end)
        
        return toggleFrame
    end
    
    function window:CreateDropdown(text, options, callback)
        local dropdownFrame = Instance.new("Frame")
        dropdownFrame.Name = "DropdownFrame"
        dropdownFrame.Size = UDim2.new(1, 0, 0, 40)
        dropdownFrame.BackgroundColor3 = Theme.Secondary
        dropdownFrame.BorderSizePixel = 0
        dropdownFrame.Parent = content
        
        CreateCorner(dropdownFrame, 8)
        CreateStroke(dropdownFrame, 1, Theme.Border)
        
        local dropdownButton = Instance.new("TextButton")
        dropdownButton.Size = UDim2.new(1, 0, 1, 0)
        dropdownButton.BackgroundTransparency = 1
        dropdownButton.Text = text or "Select Option"
        dropdownButton.TextColor3 = Theme.White
        dropdownButton.TextSize = 14
        dropdownButton.Font = Enum.Font.Gotham
        dropdownButton.TextXAlignment = Enum.TextXAlignment.Left
        dropdownButton.Parent = dropdownFrame
        
        local padding = Instance.new("UIPadding")
        padding.PaddingLeft = UDim.new(0, 15)
        padding.PaddingRight = UDim.new(0, 35)
        padding.Parent = dropdownButton
        
        local arrow = Instance.new("TextLabel")
        arrow.Size = UDim2.new(0, 20, 1, 0)
        arrow.Position = UDim2.new(1, -30, 0, 0)
        arrow.BackgroundTransparency = 1
        arrow.Text = "▼"
        arrow.TextColor3 = Theme.Gray
        arrow.TextSize = 12
        arrow.Font = Enum.Font.Gotham
        arrow.Parent = dropdownFrame
        
        local optionsFrame = Instance.new("Frame")
        optionsFrame.Name = "OptionsFrame"
        optionsFrame.Size = UDim2.new(1, 0, 0, 0)
        optionsFrame.Position = UDim2.new(0, 0, 1, 5)
        optionsFrame.BackgroundColor3 = Theme.Secondary
        optionsFrame.BorderSizePixel = 0
        optionsFrame.Visible = false
        optionsFrame.ZIndex = 10
        optionsFrame.Parent = dropdownFrame
        
        CreateCorner(optionsFrame, 8)
        CreateStroke(optionsFrame, 1, Theme.Border)
        
        local optionsLayout = Instance.new("UIListLayout")
        optionsLayout.SortOrder = Enum.SortOrder.LayoutOrder
        optionsLayout.Parent = optionsFrame
        
        local isOpen = false
        
        for i, option in ipairs(options or {}) do
            local optionButton = Instance.new("TextButton")
            optionButton.Size = UDim2.new(1, 0, 0, 35)
            optionButton.BackgroundColor3 = Theme.Secondary
            optionButton.Text = option
            optionButton.TextColor3 = Theme.White
            optionButton.TextSize = 13
            optionButton.Font = Enum.Font.Gotham
            optionButton.TextXAlignment = Enum.TextXAlignment.Left
            optionButton.BorderSizePixel = 0
            optionButton.Parent = optionsFrame
            
            local optionPadding = Instance.new("UIPadding")
            optionPadding.PaddingLeft = UDim.new(0, 15)
            optionPadding.Parent = optionButton
            
            CreateHoverEffect(optionButton, Theme.Accent, Theme.Secondary)
            
            optionButton.MouseButton1Click:Connect(function()
                dropdownButton.Text = option
                isOpen = false
                optionsFrame.Visible = false
                
                TweenService:Create(arrow, QuickAnimInfo, {Rotation = 0}):Play()
                
                if callback then
                    callback(option)
                end
            end)
        end
        
        optionsFrame.Size = UDim2.new(1, 0, 0, optionsLayout.AbsoluteContentSize.Y)
        
        dropdownButton.MouseButton1Click:Connect(function()
            isOpen = not isOpen
            optionsFrame.Visible = isOpen
            
            local arrowRotation = isOpen and 180 or 0
            TweenService:Create(arrow, QuickAnimInfo, {Rotation = arrowRotation}):Play()
        end)
        
        return dropdownFrame
    end
    
    function window:CreateTab(tabName)
        local tabFrame = Instance.new("Frame")
        tabFrame.Name = "TabFrame"
        tabFrame.Size = UDim2.new(1, 0, 0, 50)
        tabFrame.BackgroundColor3 = Theme.Secondary
        tabFrame.BorderSizePixel = 0
        tabFrame.Parent = content
        
        CreateCorner(tabFrame, 8)
        CreateStroke(tabFrame, 1, Theme.Border)
        
        local tabLabel = Instance.new("TextLabel")
        tabLabel.Size = UDim2.new(1, -20, 1, 0)
        tabLabel.Position = UDim2.new(0, 10, 0, 0)
        tabLabel.BackgroundTransparency = 1
        tabLabel.Text = tabName or "Tab"
        tabLabel.TextColor3 = Theme.White
        tabLabel.TextSize = 16
        tabLabel.Font = Enum.Font.GothamBold
        tabLabel.TextXAlignment = Enum.TextXAlignment.Left
        tabLabel.Parent = tabFrame
        
        return tabFrame
    end
    
    function window:CreateSlider(text, min, max, default, callback)
        local sliderFrame = Instance.new("Frame")
        sliderFrame.Name = "SliderFrame"
        sliderFrame.Size = UDim2.new(1, 0, 0, 60)
        sliderFrame.BackgroundColor3 = Theme.Secondary
        sliderFrame.BorderSizePixel = 0
        sliderFrame.Parent = content
        
        CreateCorner(sliderFrame, 8)
        CreateStroke(sliderFrame, 1, Theme.Border)
        
        local sliderLabel = Instance.new("TextLabel")
        sliderLabel.Size = UDim2.new(1, -20, 0, 20)
        sliderLabel.Position = UDim2.new(0, 15, 0, 10)
        sliderLabel.BackgroundTransparency = 1
        sliderLabel.Text = text or "Slider"
        sliderLabel.TextColor3 = Theme.White
        sliderLabel.TextSize = 14
        sliderLabel.Font = Enum.Font.Gotham
        sliderLabel.TextXAlignment = Enum.TextXAlignment.Left
        sliderLabel.Parent = sliderFrame
        
        local valueLabel = Instance.new("TextLabel")
        valueLabel.Size = UDim2.new(0, 50, 0, 20)
        valueLabel.Position = UDim2.new(1, -65, 0, 10)
        valueLabel.BackgroundTransparency = 1
        valueLabel.Text = tostring(default or min or 0)
        valueLabel.TextColor3 = Theme.Gray
        valueLabel.TextSize = 12
        valueLabel.Font = Enum.Font.Gotham
        valueLabel.TextXAlignment = Enum.TextXAlignment.Right
        valueLabel.Parent = sliderFrame
        
        local sliderTrack = Instance.new("Frame")
        sliderTrack.Size = UDim2.new(1, -30, 0, 4)
        sliderTrack.Position = UDim2.new(0, 15, 0, 40)
        sliderTrack.BackgroundColor3 = Theme.DarkGray
        sliderTrack.BorderSizePixel = 0
        sliderTrack.Parent = sliderFrame
        
        CreateCorner(sliderTrack, 2)
        
        local sliderFill = Instance.new("Frame")
        sliderFill.Size = UDim2.new(0, 0, 1, 0)
        sliderFill.BackgroundColor3 = Theme.White
        sliderFill.BorderSizePixel = 0
        sliderFill.Parent = sliderTrack
        
        CreateCorner(sliderFill, 2)
        
        local sliderButton = Instance.new("TextButton")
        sliderButton.Size = UDim2.new(0, 16, 0, 16)
        sliderButton.Position = UDim2.new(0, -8, 0.5, -8)
        sliderButton.BackgroundColor3 = Theme.White
        sliderButton.Text = ""
        sliderButton.BorderSizePixel = 0
        sliderButton.Parent = sliderTrack
        
        CreateCorner(sliderButton, 8)
        
        local minVal = min or 0
        local maxVal = max or 100
        local currentVal = default or minVal
        
        local function updateSlider(value)
            local percentage = (value - minVal) / (maxVal - minVal)
            percentage = math.clamp(percentage, 0, 1)
            
            sliderFill.Size = UDim2.new(percentage, 0, 1, 0)
            sliderButton.Position = UDim2.new(percentage, -8, 0.5, -8)
            valueLabel.Text = tostring(math.floor(value))
            
            if callback then
                callback(value)
            end
        end
        
        updateSlider(currentVal)
        
        local dragging = false
        
        sliderButton.MouseButton1Down:Connect(function()
            dragging = true
        end)
        
        UserInputService.InputEnded:Connect(function(input)
            if input.UserInputType == Enum.UserInputType.MouseButton1 then
                dragging = false
            end
        end)
        
        UserInputService.InputChanged:Connect(function(input)
            if dragging and input.UserInputType == Enum.UserInputType.MouseMovement then
                local mousePos = input.Position.X
                local trackPos = sliderTrack.AbsolutePosition.X
                local trackSize = sliderTrack.AbsoluteSize.X
                local percentage = math.clamp((mousePos - trackPos) / trackSize, 0, 1)
                local value = minVal + (percentage * (maxVal - minVal))
                
                updateSlider(value)
            end
        end)
        
        return sliderFrame
    end
    
    function window:CreateTextBox(placeholder, callback)
        local textBoxFrame = Instance.new("Frame")
        textBoxFrame.Name = "TextBoxFrame"
        textBoxFrame.Size = UDim2.new(1, 0, 0, 40)
        textBoxFrame.BackgroundColor3 = Theme.Secondary
        textBoxFrame.BorderSizePixel = 0
        textBoxFrame.Parent = content
        
        CreateCorner(textBoxFrame, 8)
        CreateStroke(textBoxFrame, 1, Theme.Border)
        
        local textBox = Instance.new("TextBox")
        textBox.Size = UDim2.new(1, -20, 1, 0)
        textBox.Position = UDim2.new(0, 10, 0, 0)
        textBox.BackgroundTransparency = 1
        textBox.PlaceholderText = placeholder or "Enter text..."
        textBox.PlaceholderColor3 = Theme.Gray
        textBox.Text = ""
        textBox.TextColor3 = Theme.White
        textBox.TextSize = 14
        textBox.Font = Enum.Font.Gotham
        textBox.TextXAlignment = Enum.TextXAlignment.Left
        textBox.ClearTextOnFocus = false
        textBox.Parent = textBoxFrame
        
        if callback then
            textBox.FocusLost:Connect(function(enterPressed)
                if enterPressed then
                    callback(textBox.Text)
                end
            end)
        end
        
        return textBoxFrame
    end
    
    return window
end

return Library
